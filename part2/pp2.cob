000100 IDENTIFICATION DIVISION.
000200 PROGRAM-ID.    PP2.
000300 AUTHOR.        GROUPE1.
000400
000500 ENVIRONMENT DIVISION.
000600 CONFIGURATION SECTION.
000700 SPECIAL-NAMES.
000800     DECIMAL-POINT IS COMMA.
000900
001000 INPUT-OUTPUT SECTION.
001100 FILE-CONTROL.
001200     SELECT VEU ASSIGN TO VEU
001300     ORGANIZATION IS SEQUENTIAL.
001400
001500     SELECT VAS ASSIGN TO VAS
001600     ORGANIZATION IS SEQUENTIAL.
001700
001800 DATA DIVISION.
001900 FILE SECTION.
002000 FD VEU
002100     RECORDING MODE IS F
002110     RECORD CONTAINS 35 CHARACTERS.
002200 01 ENR-VEU.
002210*                           9(3) MAIS IMPOSSIBLE DE MOVE HIGHVALUE
002300   05 O-NO-VEU          PIC X(3).
002400   05 O-DATE-VEU.
002410      10 O-DAY-VEU      PIC X(2).
002420      10 SEPARATOR      PIC X.
002430      10 O-MON-VEU      PIC X(2).
002431      10 SEPARATOR      PIC X.
002440      10 O-YEA-VEU      PIC X(4).
002500   05 E-NO-VEU          PIC 9(2).
002600   05 C-NO-VEU          PIC 9(4).
002700   05 P-NO-VEU          PIC X(3).
002800   05 PRICE-VEU         PIC 9(3)V99.
002900   05 QUANTITY-VEU      PIC 9(2).
003000   05 FILLER            PIC X(6).
003100
003110 FD VAS
003120     RECORDING MODE IS F
003121     RECORD CONTAINS 35 CHARACTERS.
003130 01 ENR-VAS.
003140   05 O-NO-VAS          PIC X(3).
003150   05 O-DATE-VAS.
003151      10 O-DAY-VAS      PIC X(2).
003152      10 SEPARATOR      PIC X.
003153      10 O-MON-VAS      PIC X(2).
003154      10 SEPARATOR      PIC X.
003155      10 O-YEA-VAS      PIC X(4).
003160   05 E-NO-VAS          PIC 9(2).
003170   05 C-NO-VAS          PIC 9(4).
003180   05 P-NO-VAS          PIC X(3).
003190   05 PRICE-VAS         PIC 9(3)V99.
003191   05 QUANTITY-VAS      PIC 9(2).
003192   05 FILLER            PIC X(6).
003200
003300 WORKING-STORAGE SECTION.
003310
003320     EXEC SQL
003330        INCLUDE SQLCA
003340     END-EXEC.
003360     EXEC SQL
003370        INCLUDE ORDERS
003380     END-EXEC.
003381     EXEC SQL
003382        INCLUDE ITEMS
003383     END-EXEC.
003384     EXEC SQL
003385        INCLUDE PRODUCTS
003386     END-EXEC.
003387     EXEC SQL
003388        INCLUDE CUSTS
003389     END-EXEC.
003390
003400 77 FLAG-VEU PIC 99 VALUE ZERO.
003500    88 EOF-VEU VALUE 1.
003600
003610 77 FLAG-VAS PIC 99 VALUE ZERO.
003620    88 EOF-VAS VALUE 1.
003700
003701* UN FLAG POUR LE UNIT TEST POUR FAIRE LA PROCEDURE QU'UNE FOIS
003702 77 FLAG-UTEST PIC 99 VALUE ZERO.
003703    88 EO-TEST VALUE 1.
003704
003710 77 WS-CUR-O-NO PIC 9(3).
003711
003712 77 WS-ZERO PIC 99 VALUE ZERO.
003720 77 WS-P-NO PIC X(3).
003730 77 ED-SQLCODE PIC +Z(8)9.
003731 77 WS-SOM-CMDE PIC 9(5)V99.
003732 77 WS-STARS PIC X(25) VALUE ALL '*'.
003733 77 WS-TIRET PIC X(25) VALUE ALL '-'.
003734 77 WS-C-NO PIC 9(4).
003735
003736 LINKAGE SECTION.
003737 01 LS-UTEST-RES PIC 9(5)V99.
003738
003740
003800 PROCEDURE DIVISION USING LS-UTEST-RES.
003900     OPEN INPUT VEU VAS
004000     PERFORM 900-READ-VEU
004010     PERFORM 900-READ-VAS
004020
004030*    LECTURE EN SYNCHRO
004100     PERFORM UNTIL EOF-VEU AND EOF-VAS
004101
004110        EVALUATE TRUE
004120           WHEN O-NO-VEU < O-NO-VAS
004121              MOVE O-NO-VEU TO WS-CUR-O-NO
004122
004123*             A CHAQUE COMMANDE ON AJOUTE LA CMDE DANS LES ORDERS
004124              PERFORM 250-MOVE-DATA-VEU
004125              PERFORM 400-WRITE-ORDERS
004126
004127              MOVE 0 TO WS-SOM-CMDE
004128*             ON ITËRE SUR CHAQUE PRODUIT
004129              PERFORM 300-LOOP-VEU
004130*             UNE FOIS QUON A BIEN LE TOTAL DE LA CMDE ON UPDATE
004131              PERFORM 400-UPDATE-CUST
004132*             ON CHOISIT DE FAIRE LE UNIT TEST ICI
004133              PERFORM 700-UNIT-TEST
004134              DISPLAY 'SOMME CMDE : ' WS-SOM-CMDE
004135
004136           WHEN O-NO-VEU > O-NO-VAS
004137              MOVE O-NO-VAS TO WS-CUR-O-NO
004138
004139              PERFORM 250-MOVE-DATA-VAS
004140              PERFORM 400-WRITE-ORDERS
004141
004142              MOVE 0 TO WS-SOM-CMDE
004143              PERFORM 300-LOOP-VAS
004144              PERFORM 400-UPDATE-CUST
004145              DISPLAY 'SOMME CMDE : ' WS-SOM-CMDE
004146
004147           WHEN O-NO-VEU = O-NO-VAS
004148              MOVE O-NO-VAS TO WS-CUR-O-NO
004149
004150              PERFORM 250-MOVE-DATA-VAS
004151              PERFORM 400-WRITE-ORDERS
004152
004153              MOVE 0 TO WS-SOM-CMDE
004154              PERFORM 300-LOOP-VEU
004155              PERFORM 300-LOOP-VAS
004156              PERFORM 400-UPDATE-CUST
004157              DISPLAY 'SOMME CMDE : ' WS-SOM-CMDE
004158
004163        END-EVALUATE
004170        DISPLAY WS-TIRET
004200     END-PERFORM
004201
004202     EXEC SQL
004203        COMMIT
004204     END-EXEC
004205     PERFORM 800-TEST-SQLCODE-COMMIT
004206
004207     CLOSE VEU VAS
004210
004300     GOBACK.
004400
004410 800-ABEND-PROG.
004420     DIVIDE 1 BY WS-ZERO GIVING WS-ZERO.
004430
004500 900-READ-VEU.
004600     READ VEU AT END
004700        SET EOF-VEU TO TRUE
004800        MOVE HIGH-VALUE TO O-NO-VEU
004900     END-READ.
005000
005010 900-READ-VAS.
005020     READ VAS AT END
005030        SET EOF-VAS TO TRUE
005040        MOVE HIGH-VALUE TO O-NO-VAS
005050     END-READ.
005100
005200 300-LOOP-VEU.
005201*    ON AJOUTE AU WS POUR POUVOIR FAIRE UNE SEULE PROCEDURE
005202*    400-UPDATE-CUST POUR LES VENTES EURO ET ASIE
005210     MOVE C-NO-VEU TO WS-C-NO
005300     PERFORM UNTIL EOF-VEU OR WS-CUR-O-NO NOT = O-NO-VEU
005411
005412*       ON AJOUTE AU WS POUR POUVOIR FAIRE UNE SEULE PROCEDURE
005413*       400-SQL-READ-P-NO POUR LES VENTES EURO ET ASIE
005414        MOVE P-NO-VEU TO WS-P-NO
005416*       ON READ LE PRICE DU PRODUIT
005417*       PERFORM 400-SQL-READ-P-NO
005418
005419*       PERFORM 250-MOVE-DATA-VEU INUTILE ‡ LA PREMIËRE BOUCLE
005420*       CAR DÈJ‡ FAIT DANS 400-WRITE-ORDERS AVANT LA LOOP
005421*       MAIS NÈSSAIRE POUR LES BOUCLES SUIVANTES POUR WRITE
005422*       CHAQUE ITEMS DANS LA TABLE
005423        PERFORM 250-MOVE-DATA-VEU
005424        PERFORM 400-WRITE-ITEMS
005425
005426        PERFORM 900-READ-VEU
005430        DISPLAY WS-STARS
005500     END-PERFORM
005600     .
005700
005710 300-LOOP-VAS.
005711     MOVE C-NO-VAS TO WS-C-NO
005720     PERFORM UNTIL EOF-VAS OR WS-CUR-O-NO NOT = O-NO-VAS
005741
005742        MOVE P-NO-VAS TO WS-P-NO
005744*       PERFORM 400-SQL-READ-P-NO
005745
005746        PERFORM 250-MOVE-DATA-VAS
005747        PERFORM 400-WRITE-ITEMS
005748
005750        PERFORM 900-READ-VAS
005751        DISPLAY WS-STARS
005760     END-PERFORM
005770     .
005800* POUR MOVE NOS DATA DANS LES HOST-VARIABLES
005801 250-MOVE-DATA-VEU.
005802*    ON READ LE PRICE DU PRODUCT
005803     PERFORM 400-SQL-READ-P-NO
005804     MOVE O-NO-VEU TO ORDER-O-NO ITEM-O-NO
005805*    ON CRÈER UNE DATE COMPATIBLE AVEC LE FORMAT SQL
005806*    ON POURRAIT FAIRE CE CALCULE UNIQUEMENT
005807*    QUAND ON CHANGE DE COMMANDE ET PAS A CHAQUE LOOP
005808*    COMME LA DATE EST CONSTANTE PAR COMMANDE TOUT COMME
005809*    LE S_NO ET LE C_NO. CELA SERAIT IMPORTANT QUAND ON
005810*    A AFFAIRE A DES GROS FICHIERS, CELA DIMINUE LE NOMBRE D'OPE.
005811*    ICI POUR NE PAS SURCHARGER LE CODE AVEC ENCORE D'AUTRE
005812*    PROCÈDURES ON CHOISIT DE REFAIRE OPERATIONS A CHAQUE LOOP
005813     STRING O-YEA-VEU DELIMITED BY SIZE
005814                '-' DELIMITED BY SIZE
005815            O-MON-VEU DELIMITED BY SIZE
005816                '-' DELIMITED BY SIZE
005817            O-DAY-VEU DELIMITED BY SIZE
005818            INTO ORDER-O-DATE
005819     MOVE E-NO-VEU TO ORDER-S-NO
005820     MOVE C-NO-VEU TO ORDER-C-NO
005821     MOVE P-NO-VEU TO ITEM-P-NO
005822     MOVE QUANTITY-VEU TO ITEM-QUANTITY
005828*    ON DONNE LA HOST-VAR QUON TROUVE DANS LE 400-SQL-READ-P-NO
005829     MOVE PROD-PRICE TO ITEM-PRICE
005830     .
005831
005832 250-MOVE-DATA-VAS.
005833     PERFORM 400-SQL-READ-P-NO
005834     MOVE O-NO-VAS TO ORDER-O-NO ITEM-O-NO
005835     STRING O-YEA-VAS DELIMITED BY SIZE
005836                '-' DELIMITED BY SIZE
005837            O-MON-VAS DELIMITED BY SIZE
005838                '-' DELIMITED BY SIZE
005839            O-DAY-VAS DELIMITED BY SIZE
005840            INTO ORDER-O-DATE
005841     MOVE E-NO-VAS TO ORDER-S-NO
005842     MOVE C-NO-VAS TO ORDER-C-NO
005843     MOVE P-NO-VAS TO ITEM-P-NO
005844     MOVE QUANTITY-VAS TO ITEM-QUANTITY
005853     MOVE PROD-PRICE TO ITEM-PRICE
005854     .
005855
005856 400-SQL-READ-P-NO.
005857     MOVE WS-P-NO TO PROD-P-NO
005858     EXEC SQL
005859          SELECT PRICE
005860          INTO :PROD-PRICE
005861          FROM API5.PRODUCTS
005862          WHERE P_NO = :PROD-P-NO
005863     END-EXEC
005864     PERFORM 800-TEST-SQLCODE-R-PRODUCTS
005865     .
005866
005867
005868 400-WRITE-ORDERS.
005869     EXEC SQL
005870           INSERT INTO API5.ORDERS
005871     (O_NO, S_NO, C_NO, O_DATE)
005872           VALUES(:ORDER-O-NO,
005873                  :ORDER-S-NO,
005880                  :ORDER-C-NO,
005890                  :ORDER-O-DATE)
005893     END-EXEC
005894     PERFORM 800-TEST-SQLCODE-C
005895
005896*    COMMIT POUR QUE 400-WRITE-ITEMS AIT PAS DE RC -530
005897*    QUI ARRIVE PCQ LES FK NE TROUVENT PAS LEUR PK
005898* A REVOIR SI CEST VRMT NECESSAIRE
005899     EXEC SQL
005900        COMMIT
005901     END-EXEC
005902     PERFORM 800-TEST-SQLCODE-COMMIT
005903     .
005904
005905 400-WRITE-ITEMS.
005906     EXEC SQL
005907           INSERT INTO API5.ITEMS
005908     (O_NO, P_NO, QUANTITY, PRICE)
005909           VALUES(:ITEM-O-NO,
005910                  :ITEM-P-NO,
005911                  :ITEM-QUANTITY,
005912                  :ITEM-PRICE)
005913     END-EXEC
005914     PERFORM 800-TEST-SQLCODE-C
005915     .
005916
005917 400-UPDATE-CUST.
005918*    ON DOIT DABORD LIRE LA BALANCE ACTUELLE DU CUSTOMER
005919     MOVE WS-C-NO TO CUSTS-C-NO
005920     EXEC SQL
005921          SELECT BALANCE
005922          INTO :CUSTS-BALANCE
005923          FROM API5.CUSTOMERS
005924          WHERE C_NO = :CUSTS-C-NO
005925     END-EXEC
005926     PERFORM 800-TEST-SQLCODE-R-CUST
005927
005928*    PUIS AJOUTER NOTRE CALCUL FAIT DANS LES READ ‡ LA BALANCE
005929     ADD WS-SOM-CMDE TO CUSTS-BALANCE
005930     EXEC SQL
005931            UPDATE API5.CUSTOMERS
005932            SET BALANCE = :CUSTS-BALANCE
005933            WHERE C_NO = :CUSTS-C-NO
005934     END-EXEC
005935     PERFORM 800-TEST-SQLCODE-M
005940     .
006000
006300
006310 800-TEST-SQLCODE-M.
006320     MOVE SQLCODE TO ED-SQLCODE
006330     EVALUATE TRUE
006340         WHEN SQLCODE = ZERO
006350               CONTINUE
006360         WHEN SQLCODE = +100
006370               DISPLAY 'ERREUR MODIF, CLE INTROUVABLE !!'
006380         WHEN OTHER
006390             IF SQLCODE > 0 THEN
006391                   DISPLAY 'WARNING : ' ED-SQLCODE
006392             ELSE
006393                   DISPLAY 'SQLCODE : ' ED-SQLCODE
006394                   EXEC SQL
006395                      ROLLBACK
006396                   END-EXEC
006397                   PERFORM 800-ABEND-PROG
006398             END-IF
006399     END-EVALUATE.
006400
006500
006510 800-TEST-SQLCODE-C.
006520       MOVE SQLCODE TO ED-SQLCODE
006530       EVALUATE TRUE
006540           WHEN SQLCODE = ZERO
006550                 CONTINUE
006560           WHEN SQLCODE = -803
006570                 DISPLAY 'ERREUR DOUBLON CREATION !'
006580           WHEN OTHER
006590               IF SQLCODE > 0 THEN
006591                     DISPLAY 'WARNING : ' ED-SQLCODE
006592               ELSE
006593                     DISPLAY 'SQLCODE : ' ED-SQLCODE
006594                     EXEC SQL
006595                        ROLLBACK
006596                     END-EXEC
006597                     PERFORM 800-ABEND-PROG
006598               END-IF
006599       END-EVALUATE.
006600
007000
007110 800-TEST-SQLCODE-R-PRODUCTS.
007120       MOVE SQLCODE TO ED-SQLCODE
007130       EVALUATE TRUE
007140           WHEN SQLCODE = ZERO
007141*                SI TOUT SE PASSE BIEN ON PEUT AJOUTER LE PRIX
007142*                AU TOTAL DE CETTE COMMANDE
007144                 ADD PROD-PRICE TO WS-SOM-CMDE
007160           WHEN SQLCODE = +100
007170                 DISPLAY 'AUCUN PRODUCTS TROUVE, P_NO : ' WS-P-NO
007171*                POUR TRAITER QUAND LE PRODUIT NEST PAS ENCORE
007172*                DANS LA TABLE. A ENLEVER PAR LA SUITE
007173                 MOVE 0 TO PROD-PRICE
007180           WHEN OTHER
007190               IF SQLCODE > 0 THEN
007191                     DISPLAY 'WARNING : ' ED-SQLCODE
007192               ELSE
007193                     DISPLAY 'SQLCODE : ' ED-SQLCODE
007194                     EXEC SQL
007195                        ROLLBACK
007196                     END-EXEC
007197                     PERFORM 800-ABEND-PROG
007198               END-IF
007199       END-EVALUATE.
007200
007201 800-TEST-SQLCODE-R-CUST.
007202       MOVE SQLCODE TO ED-SQLCODE
007203       EVALUATE TRUE
007204           WHEN SQLCODE = ZERO
007205                 CONTINUE
007207           WHEN SQLCODE = +100
007208                 DISPLAY 'AUCUN CUSTOMERS TROUVE, C_NO : ' WS-C-NO
007211           WHEN OTHER
007212               IF SQLCODE > 0 THEN
007213                     DISPLAY 'WARNING : ' ED-SQLCODE
007214               ELSE
007215                     DISPLAY 'SQLCODE : ' ED-SQLCODE
007216                     EXEC SQL
007217                        ROLLBACK
007218                     END-EXEC
007219                     PERFORM 800-ABEND-PROG
007220               END-IF
007221       END-EVALUATE.
007240
007250 800-TEST-SQLCODE-COMMIT.
007260     MOVE SQLCODE TO ED-SQLCODE
007270     EVALUATE TRUE
007280         WHEN SQLCODE = ZERO
007290               CONTINUE
007291         WHEN SQLCODE > ZERO
007292               IF SQLCODE = +100
007293                     CONTINUE
007294               ELSE
007295                     DISPLAY 'WARNING COMMIT : ' ED-SQLCODE
007296               END-IF
007297         WHEN OTHER
007298             DISPLAY 'SQLCODE ON COMMIT : ' ED-SQLCODE
007299             PERFORM 800-ABEND-PROG
007300      END-EVALUATE.
007310
007320 700-UNIT-TEST.
007330     IF NOT EO-TEST
007331         DISPLAY 'WS-SOM-CMDE AT PP2:' WS-SOM-CMDE '-'
007332         MOVE WS-SOM-CMDE TO LS-UTEST-RES
007333         SET EO-TEST TO TRUE
007340     END-IF
007350     .
007360
007370
007380
